{"version":3,"file":"component---src-pages-tags-js-c1c8854e11c7ca60ba68.js","mappings":"uJAgEA,IA5De,IAAoC,IAAnC,SAAEA,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,aAoB1BC,EADcC,WACDN,EAASO,SAC5B,IAAIC,EAEJ,MAAMC,EAASN,EAAKO,aAAaD,OAAOE,KAClCC,EAAUT,EAAKO,aAAaE,QAC5BC,EAASV,EAAKO,aAAaG,OAkBjC,OAhBEL,EADEH,EAEA,sBAAIS,UAAU,gBACZ,gBAAC,EAAAC,KAAI,CAACC,GAAG,KAAI,wBAKf,gCACG,IACD,sBAAIF,UAAU,gBACZ,gBAAC,EAAAC,KAAI,CAACC,GAAG,KAAI,wBACT,KAMV,uBAAKF,UAAU,iBAAiB,oBAAmBT,GACjD,0BAAQS,UAAU,iBAAiBN,GACnC,4BAAON,GACP,8BACE,2BAAK,MACA,qBAAGe,KAAML,GAAUH,IAExB,2BACE,qBAAGQ,KAAMJ,GAAQ,mBAGjB,C,gICFV,UA/CiB,IAQV,IAPLK,MACEC,mBAAmB,MAAEC,GACrBjB,MACEO,cAAc,MAAET,KAEnB,SACDD,GACD,EACC,MAAMqB,EAAYpB,GAAK,QAEvB,OACE,gBAAC,IAAM,CAACD,SAAUA,EAAUC,MAAOoB,GACjC,2BACE,0BAAI,QACJ,0BACGD,EAAME,KAAIC,GACT,sBAAIC,IAAKD,EAAIE,YACX,gBAAC,EAAAV,KAAI,CAACC,GAAE,SAAWU,IAAUH,EAAIE,YAAW,KACzCF,EAAIE,WAAW,KAAGF,EAAII,WAAW,UAMrC,EAwBN,MAAMC,EAAO,IAAM,gBAAC,IAAG,CAAC3B,MAAM,oB","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/pages/tags.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author {\r\n              name\r\n              summary\r\n            }\r\n            bggUrl\r\n            siteUrl\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n\r\n  const author = site.siteMetadata.author.name\r\n  const siteUrl = site.siteMetadata.siteUrl\r\n  const bggUrl = site.siteMetadata.bggUrl\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">Daniel Hearn's Blog</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <>\r\n        {\" \"}\r\n        <h1 className=\"main-heading\">\r\n          <Link to=\"/\">Daniel Hearn's Blog</Link>\r\n        </h1>{\" \"}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">{header}</header>\r\n      <main>{children}</main>\r\n      <footer>\r\n        <div>\r\n          By <a href={siteUrl}>{author}</a>\r\n        </div>\r\n        <div>\r\n          <a href={bggUrl}>BoardGameGeek</a>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n// Utilities\r\nimport kebabCase from \"lodash/kebabCase\"\r\n\r\n// Components\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst TagsPage = ({\r\n  data: {\r\n    allMarkdownRemark: { group },\r\n    site: {\r\n      siteMetadata: { title },\r\n    },\r\n  },\r\n  location,\r\n}) => {\r\n  const siteTitle = title || `Title`\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <div>\r\n        <h1>Tags</h1>\r\n        <ul>\r\n          {group.map(tag => (\r\n            <li key={tag.fieldValue}>\r\n              <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\r\n                {tag.fieldValue} ({tag.totalCount})\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nTagsPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      group: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          fieldValue: PropTypes.string.isRequired,\r\n          totalCount: PropTypes.number.isRequired,\r\n        }).isRequired\r\n      ),\r\n    }),\r\n    site: PropTypes.shape({\r\n      siteMetadata: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n      }),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default TagsPage\r\n\r\nexport const Head = () => <Seo title=\"All posts by tag\" />\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(limit: 2000) {\r\n      group(field: { frontmatter: { tags: SELECT } }) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["location","title","children","site","useStaticQuery","isRootPath","__PATH_PREFIX__","pathname","header","author","siteMetadata","name","siteUrl","bggUrl","className","Link","to","href","data","allMarkdownRemark","group","siteTitle","map","tag","key","fieldValue","kebabCase","totalCount","Head"],"sourceRoot":""}