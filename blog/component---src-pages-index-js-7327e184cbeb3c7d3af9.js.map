{"version":3,"file":"component---src-pages-index-js-7327e184cbeb3c7d3af9.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/pages/index.js","webpack://gatsby-starter-blog/./src/utilities.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { filterVisiblePosts } from \"../utilities\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const recentReviews = filterVisiblePosts(\r\n    data.allMarkdownRemark.nodes.filter(post =>\r\n      post.frontmatter?.tags?.includes(\"Review\")\r\n    )\r\n  )\r\n  const recentNews = filterVisiblePosts(\r\n    data.allMarkdownRemark.nodes.filter(\r\n      post =>\r\n        post.frontmatter?.tags?.includes(\"News\") ||\r\n        post.frontmatter?.tags?.includes(\"Opinion\")\r\n    )\r\n  )\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Bio />\r\n      <h2>Reviews</h2>\r\n      <div className=\"table table--collection table--2\">\r\n        <div>\r\n          <h4>\r\n            <Link to=\"/tags/highly-recommend/\" itemProp=\"url\">\r\n              <span itemProp=\"headline\">Highly Recommended</span>\r\n            </Link>\r\n          </h4>\r\n        </div>\r\n        <div>\r\n          <h4>\r\n            <Link to=\"/tags/recommend/\" itemProp=\"url\">\r\n              <span itemProp=\"headline\">Recommended</span>\r\n            </Link>\r\n          </h4>\r\n        </div>\r\n        {/*<div>\r\n          <h4>\r\n            <Link to=\"/tags/pick-up-on-sale/\" itemProp=\"url\">\r\n              <span itemProp=\"headline\">Pick up on Sale</span>\r\n            </Link>\r\n          </h4>\r\n        </div>*/}\r\n        <div>\r\n          <h4>\r\n            <Link to=\"/tags/print-and-play/\" itemProp=\"url\">\r\n              <span itemProp=\"headline\">Print and Play</span>\r\n            </Link>\r\n          </h4>\r\n        </div>\r\n        {/*<div>\r\n          <h3>\r\n            <Link to=\"/tags/do-not-recommend/\" itemProp=\"url\">\r\n              <span itemProp=\"headline\">Do Not Recommend</span>\r\n            </Link>\r\n          </h3>\r\n        </div>*/}\r\n      </div>\r\n      <h2>Recent Reviews</h2>\r\n      <ol style={{ listStyle: `none` }}>\r\n        {recentReviews.slice(0, 5).map(post => {\r\n          const title = post.frontmatter.title || post.fields.slug\r\n          return (\r\n            <li key={post.fields.slug} className=\"list-item\">\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemScope\r\n                itemType=\"http://schema.org/Article\"\r\n              >\r\n                <div>\r\n                  {post.frontmatter.thumbnail && (\r\n                    <img\r\n                      src={\r\n                        post.frontmatter.thumbnail.childImageSharp.resize.src\r\n                      }\r\n                      alt={`Cover of ${title}`}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <header>\r\n                    <h2>\r\n                      <Link to={post.fields.slug} itemProp=\"url\">\r\n                        <span itemProp=\"headline\">{title}</span>\r\n                      </Link>\r\n                    </h2>\r\n                    <small>{post.frontmatter.date}</small>\r\n                  </header>\r\n                  <section>\r\n                    <p\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: post.frontmatter.description || post.excerpt,\r\n                      }}\r\n                      itemProp=\"description\"\r\n                    />\r\n                  </section>\r\n                </div>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ol>\r\n      <h2>Recent News & Opinion</h2>\r\n      <ol style={{ listStyle: `none` }}>\r\n        {recentNews.slice(0, 3).map(post => {\r\n          const title = post.frontmatter.title || post.fields.slug\r\n          return (\r\n            <li key={post.fields.slug} className=\"list-item\">\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemScope\r\n                itemType=\"http://schema.org/Article\"\r\n              >\r\n                <div>\r\n                  {post.frontmatter.thumbnail && (\r\n                    <img\r\n                      src={\r\n                        post.frontmatter.thumbnail.childImageSharp.resize.src\r\n                      }\r\n                      alt={`Cover of ${title}`}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <header>\r\n                    <h2>\r\n                      <Link to={post.fields.slug} itemProp=\"url\">\r\n                        <span itemProp=\"headline\">{title}</span>\r\n                      </Link>\r\n                    </h2>\r\n                    <small>{post.frontmatter.date}</small>\r\n                  </header>\r\n                  <section>\r\n                    <p\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: post.frontmatter.description || post.excerpt,\r\n                      }}\r\n                      itemProp=\"description\"\r\n                    />\r\n                  </section>\r\n                </div>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ol>\r\n      <div className=\"column-wrap\">\r\n        <div>\r\n          <h2>Upcoming Reviews</h2>\r\n          <ul>\r\n            <li>Mindburners: Into The Void</li>\r\n            <li>Galdor's Grip (Solo)</li>\r\n            <li>Deck 52: Space Wrecked (Solo)</li>\r\n            <li>Wildtails: A Pirate Legacy (Solo)</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <h2>My Review Methodology</h2>\r\n      <p>\r\n        While I use a an x out of 10 review system on BoardGameGeek, here I\r\n        instead classify games as: Highly Recommended, Recommended, Pick up on\r\n        Sale, Do Not Recommend. I also print and play games so for games that I\r\n        have printed I will not review the quality of the components other than\r\n        the art.\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          <b>Highly Recommended:</b> These are games I would recommend to nearly\r\n          everyone regardless of price. Closest number rating would be 8-10/10.\r\n        </li>\r\n        <li>\r\n          <b>Recommended:</b> These are games I would recommend buying once you\r\n          are satisfied with the highly recommended games. This may include\r\n          games that I think are good but slightly overpriced. Closest number\r\n          rating would be 7-8/10.\r\n        </li>\r\n        <li>\r\n          <b>Pick up on Sale:</b> These are games I would recommend picking up\r\n          only on sale as they can be good experiences, but don't offer as good\r\n          value or fun as recommended or highly recommended games. Closest\r\n          number rating would be 6-7/10.\r\n        </li>\r\n        <li>\r\n          <b>Do Not Recommend:</b> These are games I would not recommend\r\n          regardless of price, due to unfun or broken gameplay. Closest number\r\n          rating would be 0-6/10.\r\n        </li>\r\n      </ul>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\n/**\r\n * Head export to define metadata for the page\r\n *\r\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\r\n */\r\nexport const Head = () => <Seo title=\"Home\" />\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n          tags\r\n          thumbnail {\r\n            childImageSharp {\r\n              resize(width: 100, height: 100) {\r\n                src\r\n              }\r\n            }\r\n          }\r\n          hidden\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","export const filterVisiblePosts = posts =>\r\n  posts.filter(post => !post.frontmatter?.hidden)\r\n"],"names":["data","location","siteTitle","site","siteMetadata","title","recentReviews","filterVisiblePosts","allMarkdownRemark","nodes","filter","post","frontmatter","tags","includes","recentNews","className","Link","to","itemProp","style","listStyle","slice","map","fields","slug","key","itemScope","itemType","thumbnail","src","childImageSharp","resize","alt","date","dangerouslySetInnerHTML","__html","description","excerpt","Head","posts","hidden"],"sourceRoot":""}