{"version":3,"file":"component---src-pages-404-js-98ff1fc30691f201c503.js","mappings":"sLA6CA,MAnCY,IAER,uBAAKA,UAAU,OACb,2BACE,0BACE,gBAAC,EAAAC,KAAI,CAACC,GAAG,IAAIC,SAAS,OACpB,4BAAM,WAIZ,2BACE,0BACE,gBAAC,EAAAF,KAAI,CAACC,GAAG,gBAAgBC,SAAS,OAChC,4BAAM,cAIZ,2BACE,0BACE,gBAAC,EAAAF,KAAI,CAACC,GAAG,iBAAiBC,SAAS,OACjC,4BAAM,cAIZ,2BACE,0BACE,gBAAC,EAAAF,KAAI,CAACC,GAAG,WAAWC,SAAS,OAC3B,4BAAM,cC8BlB,MA9De,IAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,aAoB1BC,EAD6B,MAChBL,EAASM,SAC5B,IAAIC,EAEJ,MAAMC,EAASL,EAAKM,aAAaD,OAAOE,KAClCC,EAAUR,EAAKM,aAAaE,QAC5BC,EAAST,EAAKM,aAAaG,OAkBjC,OAhBEL,EADEF,EAEA,sBAAIT,UAAU,gBACZ,gBAAC,EAAAC,KAAI,CAACC,GAAG,KAAI,oBAKf,gCACG,IACD,sBAAIF,UAAU,gBACZ,gBAAC,EAAAC,KAAI,CAACC,GAAG,KAAI,oBACT,KAMV,uBAAKF,UAAU,iBAAiB,oBAAmBS,GACjD,0BAAQT,UAAU,iBACfW,EAAO,IAAC,gBAAC,EAAG,OAEf,4BAAOL,GACP,8BACE,2BAAK,MACA,qBAAGW,KAAMF,GAAUH,IAExB,2BACE,qBAAGK,KAAMD,GAAQ,mBAGjB,C,+CC8BV,IAnFY,IAAuC,IAAD,MAArC,YAAEE,EAAW,MAAEb,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BW,EAAkBD,GAAeX,EAAKM,aAAaK,YACnDE,EAAgC,QAApB,EAAGb,EAAKM,oBAAY,aAAjB,EAAmBR,MAExC,OACE,gCACE,6BAAQe,EAAkBf,EAAK,MAAMe,EAAiBf,GACtD,wBAAMS,KAAK,cAAcO,QAASF,IAClC,wBAAMG,SAAS,WAAWD,QAAShB,IACnC,wBAAMiB,SAAS,iBAAiBD,QAASF,IACzC,wBAAMG,SAAS,UAAUD,QAAQ,YACjC,yBACEE,wBAAyB,CACvBC,OAAO,20EAiDVlB,EACA,C,iGCnFP,MAWamB,EAAO,IAAM,gBAAC,IAAG,CAACpB,MAAM,mBAErC,UAbqB,IAAyB,IAAxB,KAAEqB,EAAI,SAAEtB,GAAU,EACtC,MAAMuB,EAAYD,EAAKnB,KAAKM,aAAaR,MAEzC,OACE,gBAAC,IAAM,CAACD,SAAUA,EAAUC,MAAOsB,GACjC,0BAAI,kBACJ,yBAAG,2DACI,C","sources":["webpack://gatsby-starter-blog/./src/components/nav.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Bio = () => {\r\n  return (\r\n    <div className=\"nav\">\r\n      <div>\r\n        <h4>\r\n          <Link to=\"/\" itemProp=\"url\">\r\n            <span>Home</span>\r\n          </Link>\r\n        </h4>\r\n      </div>\r\n      <div>\r\n        <h4>\r\n          <Link to=\"/tags/review/\" itemProp=\"url\">\r\n            <span>Reviews</span>\r\n          </Link>\r\n        </h4>\r\n      </div>\r\n      <div>\r\n        <h4>\r\n          <Link to=\"/tags/opinion/\" itemProp=\"url\">\r\n            <span>Opinion</span>\r\n          </Link>\r\n        </h4>\r\n      </div>\r\n      <div>\r\n        <h4>\r\n          <Link to=\"/search/\" itemProp=\"url\">\r\n            <span>Search</span>\r\n          </Link>\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Nav from \"./nav\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author {\r\n              name\r\n              summary\r\n            }\r\n            bggUrl\r\n            siteUrl\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n\r\n  const author = site.siteMetadata.author.name\r\n  const siteUrl = site.siteMetadata.siteUrl\r\n  const bggUrl = site.siteMetadata.bggUrl\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">Gaming with Dan</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <>\r\n        {\" \"}\r\n        <h1 className=\"main-heading\">\r\n          <Link to=\"/\">Gaming with Dan</Link>\r\n        </h1>{\" \"}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">\r\n        {header} <Nav />\r\n      </header>\r\n      <main>{children}</main>\r\n      <footer>\r\n        <div>\r\n          By <a href={siteUrl}>{author}</a>\r\n        </div>\r\n        <div>\r\n          <a href={bggUrl}>BoardGameGeek</a>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <style\r\n        dangerouslySetInnerHTML={{\r\n          __html: `\r\n          /* latin */\r\n        @font-face {\r\n          font-family: 'Poppins';\r\n          font-style: normal;\r\n          font-weight: 400;\r\n          font-display: swap;\r\n          src: url(https://fonts.gstatic.com/s/poppins/v15/pxiEyp8kv8JHgFVrJJfecg.woff2) format('woff2');\r\n          unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n        }\r\n        /* latin */\r\n        @font-face {\r\n          font-family: 'Poppins';\r\n          font-style: normal;\r\n          font-weight: 500;\r\n          font-display: swap;\r\n          src: url(https://fonts.gstatic.com/s/poppins/v15/pxiByp8kv8JHgFVrLGT9Z1xlFQ.woff2) format('woff2');\r\n          unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n        }\r\n        /* latin */\r\n        @font-face {\r\n          font-family: 'Poppins';\r\n          font-style: normal;\r\n          font-weight: 600;\r\n          font-display: swap;\r\n          src: url(https://fonts.gstatic.com/s/poppins/v15/pxiByp8kv8JHgFVrLEj6Z1xlFQ.woff2) format('woff2');\r\n          unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n        }\r\n        /* latin */\r\n        @font-face {\r\n          font-family: 'Poppins';\r\n          font-style: normal;\r\n          font-weight: 700;\r\n          font-display: swap;\r\n          src: url(https://fonts.gstatic.com/s/poppins/v15/pxiByp8kv8JHgFVrLCz7Z1xlFQ.woff2) format('woff2');\r\n          unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n        }\r\n        /* latin */\r\n        @font-face {\r\n          font-family: 'Poppins';\r\n          font-style: normal;\r\n          font-weight: 800;\r\n          font-display: swap;\r\n          src: url(https://fonts.gstatic.com/s/poppins/v15/pxiByp8kv8JHgFVrLDD4Z1xlFQ.woff2) format('woff2');\r\n          unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n        }\r\n        `,\r\n        }}\r\n      />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst NotFoundPage = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <h1>404: Not Found</h1>\r\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = () => <Seo title=\"404: Not Found\" />\r\n\r\nexport default NotFoundPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["className","Link","to","itemProp","location","title","children","site","useStaticQuery","isRootPath","pathname","header","author","siteMetadata","name","siteUrl","bggUrl","href","description","metaDescription","defaultTitle","content","property","dangerouslySetInnerHTML","__html","Head","data","siteTitle"],"sourceRoot":""}