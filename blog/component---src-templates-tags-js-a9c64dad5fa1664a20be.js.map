{"version":3,"file":"component---src-templates-tags-js-a9c64dad5fa1664a20be.js","mappings":"kLA2FA,UApFa,IAAsC,IAArC,YAAEA,EAAW,KAAEC,EAAI,SAAEC,GAAU,EAC3C,MAAM,IAAEC,GAAQH,GACV,MAAEI,GAAUH,EAAKI,kBAEvB,OACE,gBAAC,IAAM,CAACH,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAG,MACJ,2BACE,0BAAKA,GACL,sBAAII,MAAO,CAAEC,UAAU,SACpBJ,EAAMK,KAAI,IAAe,IAAd,KAAEC,GAAM,EAClB,MAAMC,EAAOD,GAEP,KAAEE,GAASD,EAAKE,QAChB,MAAEP,GAAUK,EAAKG,YACvB,OACE,sBAAIC,IAAKH,EAAMI,UAAU,aACvB,2BACEA,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,2BACGP,EAAKG,YAAYK,WAChB,uBACEC,IACET,EAAKG,YAAYK,UAAUE,gBAAgBC,OAAOF,IAEpDG,IAAG,YAAcjB,KAIvB,2BACE,8BACE,0BACE,gBAAC,EAAAkB,KAAI,CAACC,GAAId,EAAKE,OAAOD,KAAMc,SAAS,OACnC,wBAAMA,SAAS,YAAYpB,KAG/B,6BAAQK,EAAKG,YAAYa,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQlB,EAAKG,YAAYgB,aAAenB,EAAKoB,SAE/CL,SAAS,mBAKd,KAIX,gBAAC,EAAAF,KAAI,CAACC,GAAG,KAAI,cAER,C","sources":["webpack://gatsby-starter-blog/./src/templates/tags.js"],"sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nconst Tags = ({ pageContext, data, location }) => {\r\n  const { tag } = pageContext\r\n  const { edges } = data.allMarkdownRemark\r\n\r\n  return (\r\n    <Layout location={location} title={tag}>\r\n      <Bio />\r\n      <div>\r\n        <h1>{tag}</h1>\r\n        <ol style={{ listStyle: `none` }}>\r\n          {edges.map(({ node }) => {\r\n            const post = node\r\n\r\n            const { slug } = post.fields\r\n            const { title } = post.frontmatter\r\n            return (\r\n              <li key={slug} className=\"list-item\">\r\n                <article\r\n                  className=\"post-list-item\"\r\n                  itemScope\r\n                  itemType=\"http://schema.org/Article\"\r\n                >\r\n                  <div>\r\n                    {post.frontmatter.thumbnail && (\r\n                      <img\r\n                        src={\r\n                          post.frontmatter.thumbnail.childImageSharp.resize.src\r\n                        }\r\n                        alt={`Cover of ${title}`}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    <header>\r\n                      <h2>\r\n                        <Link to={post.fields.slug} itemProp=\"url\">\r\n                          <span itemProp=\"headline\">{title}</span>\r\n                        </Link>\r\n                      </h2>\r\n                      <small>{post.frontmatter.date}</small>\r\n                    </header>\r\n                    <section>\r\n                      <p\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: post.frontmatter.description || post.excerpt,\r\n                        }}\r\n                        itemProp=\"description\"\r\n                      />\r\n                    </section>\r\n                  </div>\r\n                </article>\r\n              </li>\r\n            )\r\n          })}\r\n        </ol>\r\n        <Link to=\"/\">Back home</Link>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nTags.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    tag: PropTypes.string.isRequired,\r\n  }),\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      totalCount: PropTypes.number.isRequired,\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.shape({\r\n              title: PropTypes.string.isRequired,\r\n            }),\r\n            fields: PropTypes.shape({\r\n              slug: PropTypes.string.isRequired,\r\n            }),\r\n          }),\r\n        }).isRequired\r\n      ),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default Tags\r\n\r\nexport const pageQuery = graphql`\r\n  query ($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { frontmatter: { date: DESC } }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n            thumbnail {\r\n              childImageSharp {\r\n                resize(width: 100, height: 100) {\r\n                  src\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["pageContext","data","location","tag","edges","allMarkdownRemark","title","style","listStyle","map","node","post","slug","fields","frontmatter","key","className","itemScope","itemType","thumbnail","src","childImageSharp","resize","alt","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}