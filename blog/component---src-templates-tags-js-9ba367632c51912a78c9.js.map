{"version":3,"file":"component---src-templates-tags-js-9ba367632c51912a78c9.js","mappings":"8JAuDA,UAjDa,IAA4B,IAA3B,YAAEA,EAAW,KAAEC,GAAM,EACjC,MAAM,IAAEC,GAAQF,GACV,MAAEG,EAAK,WAAEC,GAAeH,EAAKI,kBAC7BC,EAAeF,EAAU,SACd,IAAfA,EAAmB,GAAK,KAAG,iBACZF,EAAG,IAEpB,OACE,2BACE,0BAAKI,GACL,0BACGH,EAAMI,KAAI,IAAe,IAAd,KAAEC,GAAM,EAClB,MAAM,KAAEC,GAASD,EAAKE,QAChB,MAAEC,GAAUH,EAAKI,YACvB,OACE,sBAAIC,IAAKJ,GACP,gBAAC,EAAAK,KAAI,CAACC,GAAIN,GAAOE,GACd,KAIX,gBAAC,EAAAG,KAAI,CAACC,GAAG,SAAQ,YACb,C","sources":["webpack://gatsby-starter-blog/./src/templates/tags.js"],"sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n// Components\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nconst Tags = ({ pageContext, data }) => {\r\n  const { tag } = pageContext\r\n  const { edges, totalCount } = data.allMarkdownRemark\r\n  const tagHeader = `${totalCount} post${\r\n    totalCount === 1 ? \"\" : \"s\"\r\n  } tagged with \"${tag}\"`\r\n\r\n  return (\r\n    <div>\r\n      <h1>{tagHeader}</h1>\r\n      <ul>\r\n        {edges.map(({ node }) => {\r\n          const { slug } = node.fields\r\n          const { title } = node.frontmatter\r\n          return (\r\n            <li key={slug}>\r\n              <Link to={slug}>{title}</Link>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n      <Link to=\"/tags\">All tags</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nTags.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    tag: PropTypes.string.isRequired,\r\n  }),\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      totalCount: PropTypes.number.isRequired,\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.shape({\r\n              title: PropTypes.string.isRequired,\r\n            }),\r\n            fields: PropTypes.shape({\r\n              slug: PropTypes.string.isRequired,\r\n            }),\r\n          }),\r\n        }).isRequired\r\n      ),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default Tags\r\n\r\nexport const pageQuery = graphql`\r\n  query ($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { frontmatter: { date: DESC } }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["pageContext","data","tag","edges","totalCount","allMarkdownRemark","tagHeader","map","node","slug","fields","title","frontmatter","key","Link","to"],"sourceRoot":""}